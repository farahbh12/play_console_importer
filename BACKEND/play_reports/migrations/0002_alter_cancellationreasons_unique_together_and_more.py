# Generated by Django 5.2.1 on 2025-07-09 15:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('play_reports', '0001_initial'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='cancellationreasons',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='cancellationreasons',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='crashesoverview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='crashesoverview',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='earnings',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='earnings',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='estimatedsales',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='estimatedsales',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='installsoverview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='installsoverview',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='promotionalcontent',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='promotionalcontent',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='ratingsoverview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='ratingsoverview',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='retainedinstalleroverview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='retainedinstalleroverview',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='reviews',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='reviews',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='storeperformanceoverview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='storeperformanceoverview',
            name='tenant',
        ),
        migrations.AlterUniqueTogether(
            name='subscriptionsoverview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='subscriptionsoverview',
            name='tenant',
        ),
        migrations.CreateModel(
            name='GooglePlayBuyersDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='Date de début de la période de 7 jours')),
                ('dimension_type', models.CharField(choices=[('overview', 'Aperçu général'), ('country', 'Pays'), ('acquisition_channel', "Canal d'acquisition"), ('utm_source', 'Source UTM'), ('utm_campaign', 'Campagne UTM'), ('keyword', 'Mot-clé')], db_index=True, help_text='Type de dimension', max_length=20)),
                ('dimension_value', models.CharField(db_index=True, help_text='Valeur de la dimension', max_length=255)),
                ('store_listing_visitors', models.PositiveIntegerField(default=0, help_text="Nombre de visiteurs sur la fiche de l'application")),
                ('installers', models.PositiveIntegerField(default=0, help_text="Nombre d'installations")),
                ('buyers', models.PositiveIntegerField(default=0, help_text="Nombre d'acheteurs uniques")),
                ('repeat_buyers', models.PositiveIntegerField(default=0, help_text="Nombre d'acheteurs récurrents")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers_dimensioned', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Acheteurs dimensionnés 7j',
                'verbose_name_plural': 'Acheteurs dimensionnés 7j',
                'db_table': 'google_play_buyers_dimensioned',
                'ordering': ['-date', 'dimension_type', 'dimension_value'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayBuyersOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='Date de début de la période de 7 jours')),
                ('acquisition_channel', models.CharField(choices=[('organic', 'Organique'), ('referral', 'Parrainage'), ('campaign', 'Campagne'), ('search', 'Recherche'), ('discovery', 'Découverte'), ('external', 'Externe')], db_index=True, help_text="Canal d'acquisition des utilisateurs", max_length=50)),
                ('country', models.CharField(db_index=True, help_text='Code pays ISO 3166-1 alpha-2', max_length=2)),
                ('store_listing_visitors', models.PositiveIntegerField(default=0, help_text="Nombre de visiteurs sur la fiche de l'application")),
                ('installers', models.PositiveIntegerField(default=0, help_text="Nombre d'installations")),
                ('buyers', models.PositiveIntegerField(default=0, help_text="Nombre d'acheteurs uniques")),
                ('repeat_buyers', models.PositiveIntegerField(default=0, help_text="Nombre d'acheteurs récurrents")),
                ('visitor_to_installer_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de conversion visiteur → installation (%)', max_digits=5, null=True)),
                ('installer_to_buyer_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de conversion installation → achat (%)', max_digits=5, null=True)),
                ('buyer_to_repeat_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de réachat (%)', max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers_overview', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Aperçu des acheteurs 7j',
                'verbose_name_plural': 'Aperçus des acheteurs 7j',
                'db_table': 'google_play_buyers_overview',
                'ordering': ['-date', 'country', 'acquisition_channel'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayCrashesDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('dimension_type', models.CharField(choices=[('app_version', 'App Version'), ('device', 'Device'), ('os_version', 'OS Version'), ('android_os_version', 'Android OS Version')], max_length=50)),
                ('dimension_value', models.CharField(max_length=255)),
                ('daily_crashes', models.IntegerField(default=0)),
                ('daily_anrs', models.IntegerField(blank=True, default=0, null=True)),
                ('crash_rate', models.FloatField(blank=True, null=True)),
                ('anr_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crashes_dimensioned_data', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Crashes Dimensioned',
                'verbose_name_plural': 'Google Play Crashes Dimensioned',
                'db_table': 'google_play_crashes_dimensioned',
                'ordering': ['-date', 'package_name', 'dimension_type'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayCrashesOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('device', models.CharField(blank=True, max_length=255, null=True)),
                ('app_version', models.CharField(blank=True, max_length=100, null=True)),
                ('os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('android_os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('daily_crashes', models.IntegerField(default=0)),
                ('daily_anrs', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crashes_overview_data', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Crashes Overview',
                'verbose_name_plural': 'Google Play Crashes Overview',
                'db_table': 'google_play_crashes_overview',
                'ordering': ['-date', 'package_name'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(db_index=True)),
                ('transaction_time', models.TimeField()),
                ('transaction_datetime', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('transaction_type', models.CharField(choices=[('sale', 'Sale'), ('refund', 'Refund'), ('chargeback', 'Chargeback'), ('chargeback_reversal', 'Chargeback Reversal'), ('tax_reversal', 'Tax Reversal')], max_length=50)),
                ('refund_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_title', models.CharField(max_length=255)),
                ('product_id', models.CharField(db_index=True, max_length=100)),
                ('product_type', models.CharField(max_length=50)),
                ('sku_id', models.CharField(db_index=True, max_length=100)),
                ('hardware', models.CharField(blank=True, max_length=100, null=True)),
                ('buyer_country', models.CharField(db_index=True, max_length=10)),
                ('buyer_state', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('buyer_currency', models.CharField(max_length=10)),
                ('amount_buyer_currency', models.DecimalField(decimal_places=2, max_digits=15)),
                ('merchant_currency', models.CharField(max_length=10)),
                ('amount_merchant_currency', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency_conversion_rate', models.DecimalField(decimal_places=5, max_digits=10)),
                ('tax_type', models.CharField(blank=True, choices=[('VAT', 'VAT'), ('GST', 'GST'), ('HST', 'HST'), ('PST', 'PST'), ('QST', 'QST'), ('RST', 'RST'), ('JCT', 'JCT'), ('SST', 'SST')], max_length=10, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('service_fee_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('service_fee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('base_plan_id', models.CharField(blank=True, max_length=100, null=True)),
                ('offer_id', models.CharField(blank=True, max_length=100, null=True)),
                ('group_id', models.CharField(blank=True, max_length=100, null=True)),
                ('promotion_id', models.CharField(blank=True, max_length=100, null=True)),
                ('first_usd_1m_eligible', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('fee_description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Earning',
                'verbose_name_plural': 'Google Play Earnings',
                'db_table': 'google_play_earnings',
                'ordering': ['-transaction_date', '-transaction_time'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayEstimatedSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=255)),
                ('order_charged_date', models.DateField()),
                ('order_charged_timestamp', models.BigIntegerField()),
                ('financial_status', models.CharField(max_length=255)),
                ('device_model', models.CharField(max_length=255)),
                ('product_title', models.CharField(max_length=255)),
                ('product_id', models.CharField(max_length=255)),
                ('product_type', models.CharField(max_length=255)),
                ('sku_id', models.CharField(max_length=255)),
                ('currency_of_sale', models.CharField(max_length=10)),
                ('item_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('taxes_collected', models.DecimalField(decimal_places=2, max_digits=10)),
                ('charged_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('city_of_buyer', models.CharField(max_length=255)),
                ('state_of_buyer', models.CharField(max_length=255)),
                ('postcode_of_buyer', models.CharField(max_length=20)),
                ('country_of_buyer', models.CharField(max_length=255)),
                ('base_plan_id', models.CharField(max_length=255)),
                ('offer_id', models.CharField(max_length=255)),
                ('group_id', models.IntegerField()),
                ('first_usd_1m_eligible', models.CharField(max_length=255)),
                ('promotion_id', models.CharField(max_length=255)),
                ('coupon_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('featured_products_id', models.IntegerField()),
                ('price_experiment_id', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimated_sales_data', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Vente Estimée',
                'verbose_name_plural': 'Ventes Estimées',
            },
        ),
        migrations.CreateModel(
            name='GooglePlayInstallsDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('dimension_type', models.CharField(max_length=50)),
                ('dimension_value', models.CharField(max_length=255)),
                ('current_device_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('installs_on_active_devices', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_device_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_device_uninstalls', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_device_upgrades', models.IntegerField(blank=True, default=0, null=True)),
                ('total_user_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_user_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_user_uninstalls', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installs_dimensioned_data', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Installs Dimensioned',
                'verbose_name_plural': 'Google Play Installs Dimensioned',
                'db_table': 'google_play_installs_dimensioned',
                'ordering': ['-date', 'package_name', 'dimension_type'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayInstallsOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('device', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('app_version', models.CharField(blank=True, max_length=100, null=True)),
                ('os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('carrier', models.CharField(blank=True, max_length=100, null=True)),
                ('current_device_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('installs_on_active_devices', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_device_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_device_uninstalls', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_device_upgrades', models.IntegerField(blank=True, default=0, null=True)),
                ('total_user_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_user_installs', models.IntegerField(blank=True, default=0, null=True)),
                ('daily_user_uninstalls', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installs_overview_data', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Installs Overview',
                'verbose_name_plural': 'Google Play Installs Overview',
                'db_table': 'google_play_installs_overview',
                'ordering': ['-date', 'package_name'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(db_index=True, max_length=50)),
                ('program', models.CharField(blank=True, max_length=50, null=True)),
                ('external_transaction_id', models.CharField(db_index=True, max_length=100)),
                ('transaction_date', models.DateField(db_index=True)),
                ('transaction_time', models.TimeField()),
                ('transaction_datetime', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('transaction_timestamp', models.BigIntegerField(db_index=True)),
                ('transaction_type', models.CharField(choices=[('sale', 'Sale'), ('refund', 'Refund'), ('chargeback', 'Chargeback'), ('reversal', 'Reversal')], max_length=20)),
                ('sku_type', models.CharField(choices=[('inapp', 'In-app Product'), ('subs', 'Subscription'), ('one_time', 'One-time Purchase')], max_length=20)),
                ('package_id', models.CharField(db_index=True, max_length=100)),
                ('sale_country', models.CharField(db_index=True, max_length=5)),
                ('item_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('sale_currency', models.CharField(max_length=5)),
                ('amount_due_sale_currency', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('exchange_rate', models.DecimalField(decimal_places=6, max_digits=15)),
                ('billing_currency', models.CharField(max_length=5)),
                ('amount_due_billing_currency', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('tax_type', models.CharField(blank=True, choices=[('VAT', 'VAT'), ('GST', 'GST'), ('HST', 'HST'), ('PST', 'PST'), ('QST', 'QST'), ('RST', 'RST'), ('JCT', 'JCT'), ('SST', 'SST'), ('none', 'No Tax')], max_length=10, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('group_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('first_million_eligible', models.BooleanField(blank=True, null=True)),
                ('service_fee_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('service_fee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('fee_description', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Invoice',
                'verbose_name_plural': 'Google Play Invoices',
                'db_table': 'google_play_invoice',
                'ordering': ['-transaction_date', '-transaction_time'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayPromotionalContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotional_content_id', models.CharField(help_text='Identifiant unique du contenu promotionnel', max_length=100)),
                ('promotional_content_name', models.CharField(help_text='Nom du contenu promotionnel', max_length=255)),
                ('package_name', models.CharField(help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text='Date des statistiques')),
                ('country', models.CharField(db_index=True, help_text='Code pays ISO 3166-1 alpha-2', max_length=2)),
                ('outcome', models.CharField(choices=[('view', 'Vue'), ('click', 'Clic'), ('install', 'Installation'), ('purchase', 'Achat')], db_index=True, help_text='Type de résultat mesuré', max_length=20)),
                ('daily_converters', models.PositiveIntegerField(default=0, help_text='Nombre de convertisseurs quotidiens')),
                ('daily_conversion_rate', models.DecimalField(decimal_places=2, help_text='Taux de conversion quotidien (%)', max_digits=10)),
                ('rolling_28d_converters', models.DecimalField(decimal_places=2, help_text='Moyenne mobile sur 28 jours des convertisseurs', max_digits=10)),
                ('rolling_28d_viewers', models.DecimalField(decimal_places=2, help_text='Moyenne mobile sur 28 jours des vues uniques', max_digits=10)),
                ('rolling_28d_conversion_rate', models.DecimalField(decimal_places=2, help_text='Taux de conversion moyen sur 28 jours (%)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotional_contents', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Contenu promotionnel',
                'verbose_name_plural': 'Contenus promotionnels',
                'db_table': 'google_play_promotional_content',
                'ordering': ['-date', 'country', 'promotional_content_name'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayRatingsDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text="Date des données d'évaluation")),
                ('dimension_type', models.CharField(choices=[('overview', 'Aperçu général'), ('country', 'Pays'), ('device', 'Appareil'), ('app_version', "Version de l'application"), ('carrier', 'Opérateur'), ('language', 'Langue'), ('os_version', "Version d'OS"), ('android_os_version', "Version d'Android")], db_index=True, help_text='Type de dimension', max_length=20)),
                ('dimension_value', models.CharField(db_index=True, help_text='Valeur de la dimension', max_length=255)),
                ('average_rating', models.DecimalField(decimal_places=2, help_text='Note moyenne (1-5)', max_digits=3)),
                ('ratings_count', models.PositiveIntegerField(default=0, help_text="Nombre total d'évaluations")),
                ('one_star_ratings', models.PositiveIntegerField(default=0)),
                ('two_star_ratings', models.PositiveIntegerField(default=0)),
                ('three_star_ratings', models.PositiveIntegerField(default=0)),
                ('four_star_ratings', models.PositiveIntegerField(default=0)),
                ('five_star_ratings', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_dimensioned', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Évaluation dimensionnée',
                'verbose_name_plural': 'Évaluations dimensionnées',
                'db_table': 'google_play_ratings_dimensioned',
                'ordering': ['-date', 'package_name', 'dimension_type', 'dimension_value'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayRatingsOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text="Date des données d'évaluation")),
                ('daily_average_rating', models.DecimalField(decimal_places=2, help_text='Note moyenne journalière (1-5)', max_digits=3)),
                ('total_average_rating', models.DecimalField(decimal_places=2, help_text='Note moyenne totale cumulée (1-5)', max_digits=3)),
                ('daily_ratings_count', models.PositiveIntegerField(default=0, help_text="Nombre total d'évaluations pour la journée")),
                ('total_ratings_count', models.PositiveIntegerField(default=0, help_text="Nombre total cumulé d'évaluations")),
                ('one_star_ratings', models.PositiveIntegerField(default=0)),
                ('two_star_ratings', models.PositiveIntegerField(default=0)),
                ('three_star_ratings', models.PositiveIntegerField(default=0)),
                ('four_star_ratings', models.PositiveIntegerField(default=0)),
                ('five_star_ratings', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_overview', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Aperçu des évaluations',
                'verbose_name_plural': 'Aperçus des évaluations',
                'db_table': 'google_play_ratings_overview',
                'ordering': ['-date', 'package_name'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayRetainedInstallersDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='Date de référence des données')),
                ('dimension_type', models.CharField(choices=[('overview', 'Aperçu général'), ('country', 'Pays'), ('acquisition_channel', "Canal d'acquisition"), ('utm_source', 'Source UTM'), ('utm_campaign', 'Campagne UTM'), ('keyword', 'Mot-clé')], db_index=True, help_text='Type de dimension', max_length=20)),
                ('dimension_value', models.CharField(db_index=True, help_text='Valeur de la dimension', max_length=255)),
                ('retention_period', models.PositiveSmallIntegerField(choices=[(1, '1 jour'), (7, '7 jours'), (15, '15 jours'), (30, '30 jours')], db_index=True, help_text='Période de rétention en jours')),
                ('installers', models.PositiveIntegerField(default=0, help_text="Nombre total d'installations")),
                ('installers_retained', models.PositiveIntegerField(default=0, help_text="Nombre d'installateurs retenus")),
                ('retention_rate', models.DecimalField(decimal_places=2, help_text='Taux de rétention (%)', max_digits=5)),
                ('median_session_duration', models.PositiveIntegerField(blank=True, help_text='Durée médiane des sessions (secondes)', null=True)),
                ('sessions_per_user', models.DecimalField(blank=True, decimal_places=2, help_text='Nombre moyen de sessions par utilisateur', max_digits=5, null=True)),
                ('screen_views_per_session', models.DecimalField(blank=True, decimal_places=2, help_text="Nombre moyen d'écrans vus par session", max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retained_installers_dimensioned', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Installateurs retenus dimensionnés',
                'verbose_name_plural': 'Installateurs retenus dimensionnés',
                'db_table': 'google_play_retained_installers_dimensioned',
                'ordering': ['-date', 'dimension_type', 'retention_period'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayRetainedInstallersOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='Date de référence des données')),
                ('acquisition_channel', models.CharField(choices=[('organic', 'Organique'), ('referral', 'Parrainage'), ('campaign', 'Campagne'), ('search', 'Recherche'), ('discovery', 'Découverte'), ('external', 'Externe')], db_index=True, help_text="Canal d'acquisition des utilisateurs", max_length=50)),
                ('country', models.CharField(db_index=True, help_text='Code pays ISO 3166-1 alpha-2', max_length=2)),
                ('store_listing_visitors', models.PositiveIntegerField(default=0, help_text="Nombre de visiteurs sur la fiche de l'application")),
                ('installers', models.PositiveIntegerField(default=0, help_text="Nombre d'installations")),
                ('visitor_to_installer_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de conversion visiteur → installation (%)', max_digits=5, null=True)),
                ('median_visitor_to_installer', models.DecimalField(blank=True, decimal_places=2, help_text='Médiane du taux de conversion visiteur → installation (%)', max_digits=5, null=True)),
                ('installers_retained_1_day', models.PositiveIntegerField(default=0, help_text="Installateurs retenus 1 jour après l'installation")),
                ('installers_retained_7_days', models.PositiveIntegerField(default=0, help_text="Installateurs retenus 7 jours après l'installation")),
                ('installers_retained_15_days', models.PositiveIntegerField(default=0, help_text="Installateurs retenus 15 jours après l'installation")),
                ('installers_retained_30_days', models.PositiveIntegerField(default=0, help_text="Installateurs retenus 30 jours après l'installation")),
                ('retention_rate_1_day', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de rétention à 1 jour (%)', max_digits=5, null=True)),
                ('retention_rate_7_days', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de rétention à 7 jours (%)', max_digits=5, null=True)),
                ('retention_rate_15_days', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de rétention à 15 jours (%)', max_digits=5, null=True)),
                ('retention_rate_30_days', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de rétention à 30 jours (%)', max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retained_installers_overview', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Aperçu des installateurs retenus',
                'verbose_name_plural': 'Aperçus des installateurs retenus',
                'db_table': 'google_play_retained_installers_overview',
                'ordering': ['-date', 'country', 'acquisition_channel'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayReviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, max_length=255)),
                ('review_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('app_version_code', models.CharField(blank=True, max_length=50, null=True)),
                ('app_version_name', models.CharField(blank=True, max_length=100, null=True)),
                ('review_title', models.CharField(blank=True, max_length=500, null=True)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('star_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('review_submit_date', models.DateTimeField(db_index=True)),
                ('review_submit_millis_since_epoch', models.BigIntegerField(db_index=True)),
                ('review_last_update_date', models.DateTimeField(blank=True, null=True)),
                ('review_last_update_millis_since_epoch', models.BigIntegerField(blank=True, null=True)),
                ('developer_reply_date', models.DateTimeField(blank=True, null=True)),
                ('developer_reply_millis_since_epoch', models.BigIntegerField(blank=True, null=True)),
                ('developer_reply_text', models.TextField(blank=True, null=True)),
                ('reviewer_language', models.CharField(blank=True, max_length=10, null=True)),
                ('device', models.CharField(blank=True, max_length=255, null=True)),
                ('device_metadata', models.JSONField(blank=True, default=dict)),
                ('review_link', models.URLField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Review',
                'verbose_name_plural': 'Google Play Reviews',
                'db_table': 'google_play_reviews',
                'ordering': ['-review_submit_date'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlaySales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(db_index=True, max_length=100)),
                ('billing_date', models.DateField(db_index=True)),
                ('billing_timestamp', models.BigIntegerField(db_index=True)),
                ('financial_status', models.CharField(choices=[('charged', 'Charged'), ('refunded', 'Refunded'), ('voided', 'Voided'), ('pending', 'Pending'), ('charged_but_not_shown', 'Charged but Not Shown')], max_length=30)),
                ('device_model', models.CharField(blank=True, max_length=100, null=True)),
                ('product_title', models.CharField(max_length=255)),
                ('package_id', models.CharField(db_index=True, max_length=100)),
                ('product_type', models.CharField(choices=[('inapp', 'In-app Purchase'), ('subs', 'Subscription'), ('subs_cancel', 'Subscription Canceled'), ('subs_pause', 'Subscription Paused'), ('subs_defer', 'Subscription Deferred'), ('subs_revoked', 'Subscription Revoked'), ('subs_renewed', 'Subscription Renewed')], max_length=20)),
                ('product_id', models.CharField(db_index=True, max_length=100)),
                ('sale_currency', models.CharField(max_length=5)),
                ('item_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('charged_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('buyer_city', models.CharField(blank=True, max_length=100, null=True)),
                ('buyer_state', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('buyer_country', models.CharField(db_index=True, max_length=5)),
                ('subscription_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('base_plan_id', models.CharField(blank=True, max_length=100, null=True)),
                ('offer_id', models.CharField(blank=True, max_length=100, null=True)),
                ('group_id', models.CharField(blank=True, max_length=100, null=True)),
                ('first_million_eligible', models.BooleanField(blank=True, null=True)),
                ('promotion_id', models.CharField(blank=True, max_length=100, null=True)),
                ('coupon_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('discount_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('featured_products_id', models.CharField(blank=True, max_length=100, null=True)),
                ('price_experiment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Google Play Sale',
                'verbose_name_plural': 'Google Play Sales',
                'db_table': 'google_play_sales',
                'ordering': ['-billing_date', '-billing_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayStorePerformanceDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text='Date des données de performance')),
                ('dimension_type', models.CharField(choices=[('overview', 'Aperçu général'), ('country', 'Pays'), ('traffic_source', 'Source de trafic'), ('search_term', 'Terme de recherche'), ('utm_source', 'Source UTM'), ('utm_campaign', 'Campagne UTM')], db_index=True, help_text='Type de dimension', max_length=20)),
                ('dimension_value', models.CharField(db_index=True, help_text='Valeur de la dimension', max_length=255)),
                ('store_listing_visitors', models.PositiveIntegerField(default=0, help_text="Nombre de visiteurs sur la fiche de l'application")),
                ('store_listing_acquisitions', models.PositiveIntegerField(default=0, help_text="Nombre d'acquisitions depuis la fiche")),
                ('store_listing_conversion_rate', models.DecimalField(decimal_places=2, help_text='Taux de conversion (en %)', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_performance_dimensioned', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Performance du Store dimensionnée',
                'verbose_name_plural': 'Performances du Store dimensionnées',
                'db_table': 'google_play_store_performance_dimensioned',
                'ordering': ['-date', 'package_name', 'dimension_type', 'dimension_value'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlayStorePerformanceOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text='Date des données de performance')),
                ('country', models.CharField(db_index=True, help_text='Code pays ISO 3166-1 alpha-2', max_length=2)),
                ('traffic_source', models.CharField(db_index=True, help_text='Source du trafic (ex: organic, paid, etc.)', max_length=100)),
                ('search_term', models.CharField(blank=True, db_index=True, help_text='Terme de recherche (si applicable)', max_length=255, null=True)),
                ('utm_source', models.CharField(blank=True, db_index=True, help_text='Source UTM (si applicable)', max_length=100, null=True)),
                ('utm_campaign', models.CharField(blank=True, db_index=True, help_text='Campagne UTM (si applicable)', max_length=100, null=True)),
                ('store_listing_visitors', models.PositiveIntegerField(default=0, help_text="Nombre de visiteurs sur la fiche de l'application")),
                ('store_listing_acquisitions', models.PositiveIntegerField(default=0, help_text="Nombre d'acquisitions depuis la fiche")),
                ('store_listing_conversion_rate', models.DecimalField(decimal_places=2, help_text='Taux de conversion (en %)', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_performance_overview', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Performance du Store',
                'verbose_name_plural': 'Performances du Store',
                'db_table': 'google_play_store_performance_overview',
                'ordering': ['-date', 'package_name', 'country'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlaySubscriptionCancellationReasons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancellation_date', models.DateField(db_index=True, help_text="Date d'annulation de l'abonnement")),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('subscription_id', models.CharField(db_index=True, help_text="ID de l'abonnement", max_length=255)),
                ('sku_id', models.CharField(db_index=True, help_text='Identifiant du produit (SKU)', max_length=255)),
                ('country', models.CharField(db_index=True, help_text='Code pays ISO 3166-1 alpha-2', max_length=2)),
                ('cancellation_reason', models.CharField(choices=[('subscription_canceled', "Abonnement annulé par l'utilisateur"), ('subscription_canceled_by_system', 'Abonnement annulé par le système'), ('subscription_replaced', 'Abonnement remplacé'), ('subscription_expired', 'Abonnement expiré'), ('subscription_price_change_confirmed', 'Changement de prix confirmé'), ('subscription_restarted', 'Abonnement redémarré'), ('subscription_revoked', 'Abonnement révoqué'), ('subscription_paused', 'Abonnement en pause')], db_index=True, help_text="Raison de l'annulation", max_length=50)),
                ('cancellation_reason_text', models.TextField(blank=True, help_text="Description détaillée de la raison d'annulation", null=True)),
                ('cancellation_sub_reason', models.CharField(blank=True, db_index=True, help_text="Sous-raison de l'annulation", max_length=100, null=True)),
                ('cancellation_count', models.PositiveIntegerField(default=1, help_text="Nombre d'annulations pour cette raison")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text="Date de traitement de l'enregistrement", null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_cancellations', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': "Raison d'annulation d'abonnement",
                'verbose_name_plural': "Raisons d'annulation d'abonnements",
                'db_table': 'google_play_subscription_cancellation_reasons',
                'ordering': ['-cancellation_date', 'package_name', 'country'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlaySubscriptionsDimensioned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text="Date des données d'abonnement")),
                ('dimension_type', models.CharField(choices=[('overview', 'Aperçu général'), ('country', 'Pays'), ('subscription_id', "ID d'abonnement"), ('base_plan_id', 'ID du plan de base'), ('offer_id', "ID de l'offre")], db_index=True, help_text='Type de dimension', max_length=20)),
                ('dimension_value', models.CharField(db_index=True, help_text='Valeur de la dimension', max_length=255)),
                ('new_subscribers', models.PositiveIntegerField(default=0, help_text='Nombre de nouveaux abonnés')),
                ('cancelled_subscribers', models.PositiveIntegerField(default=0, help_text="Nombre d'abonnements annulés")),
                ('active_subscribers', models.PositiveIntegerField(default=0, help_text="Nombre d'abonnés actifs")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions_dimensioned', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Abonnement dimensionné',
                'verbose_name_plural': 'Abonnements dimensionnés',
                'db_table': 'google_play_subscriptions_dimensioned',
                'ordering': ['-date', 'package_name', 'dimension_type', 'dimension_value'],
            },
        ),
        migrations.CreateModel(
            name='GooglePlaySubscriptionsOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(db_index=True, help_text="Nom du package de l'application", max_length=255)),
                ('date', models.DateField(db_index=True, help_text="Date des données d'abonnement")),
                ('product_id', models.CharField(db_index=True, help_text="ID du produit d'abonnement", max_length=255)),
                ('country', models.CharField(db_index=True, help_text='Code pays ISO 3166-1 alpha-2', max_length=2)),
                ('new_subscribers', models.PositiveIntegerField(default=0, help_text='Nombre de nouveaux abonnés')),
                ('cancelled_subscribers', models.PositiveIntegerField(default=0, help_text="Nombre d'abonnements annulés")),
                ('active_subscribers', models.PositiveIntegerField(default=0, help_text="Nombre d'abonnés actifs")),
                ('base_plan_id', models.CharField(blank=True, db_index=True, help_text='ID du plan de base', max_length=100, null=True)),
                ('offer_id', models.CharField(blank=True, db_index=True, help_text="ID de l'offre promotionnelle", max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions_overview', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Aperçu des abonnements',
                'verbose_name_plural': 'Aperçus des abonnements',
                'db_table': 'google_play_subscriptions_overview',
                'ordering': ['-date', 'package_name', 'country'],
            },
        ),
        migrations.CreateModel(
            name='play_balance_krw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(db_index=True, help_text='Format: GPA.XXXX-XXXX-XXXX-XXXXX ou GPA.XXXX-XXXX-XXXX-XXXXX..N', max_length=100)),
                ('billing_date', models.DateField(db_index=True, help_text='Date de la transaction au format YYYY-MM-DD (UTC)')),
                ('financial_status', models.CharField(choices=[('CHARGED', 'Chargé'), ('REFUNDED', 'Remboursé'), ('PENDING', 'En attente'), ('CANCELLED', 'Annulé'), ('VOIDED', 'Annulé (remboursé)')], db_index=True, help_text='Statut financier de la transaction', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Montant de la transaction', max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='KRW', help_text='Devise de la transaction (toujours KRW)', max_length=3)),
                ('billing_timestamp', models.BigIntegerField(db_index=True, help_text='Horodatage UNIX de la transaction')),
                ('transaction_id', models.CharField(blank=True, db_index=True, help_text='ID de transaction Google', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='Date de traitement de la transaction', null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='krw_balances', to='play_reports.tenant')),
            ],
            options={
                'verbose_name': 'Solde KRW Google Play',
                'verbose_name_plural': 'Soldes KRW Google Play',
                'db_table': 'google_play_krw_balance',
                'ordering': ['-billing_date', '-billing_timestamp'],
            },
        ),
        migrations.DeleteModel(
            name='Buyers7DOverview',
        ),
        migrations.DeleteModel(
            name='CancellationReasons',
        ),
        migrations.DeleteModel(
            name='CrashesOverview',
        ),
        migrations.DeleteModel(
            name='Earnings',
        ),
        migrations.DeleteModel(
            name='EstimatedSales',
        ),
        migrations.DeleteModel(
            name='InstallsOverview',
        ),
        migrations.DeleteModel(
            name='PromotionalContent',
        ),
        migrations.DeleteModel(
            name='RatingsOverview',
        ),
        migrations.DeleteModel(
            name='RetainedInstallerOverview',
        ),
        migrations.DeleteModel(
            name='Reviews',
        ),
        migrations.DeleteModel(
            name='StorePerformanceOverview',
        ),
        migrations.DeleteModel(
            name='SubscriptionsOverview',
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersdimensioned',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__af4255_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersdimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_4ff810_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersdimensioned',
            index=models.Index(fields=['buyers'], name='google_play_buyers_9ded06_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaybuyersdimensioned',
            unique_together={('tenant', 'date', 'dimension_type', 'dimension_value')},
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersoverview',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__523d42_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersoverview',
            index=models.Index(fields=['acquisition_channel', 'country'], name='google_play_acquisi_3cb933_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersoverview',
            index=models.Index(fields=['store_listing_visitors'], name='google_play_store_l_f18275_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaybuyersoverview',
            index=models.Index(fields=['buyers'], name='google_play_buyers_17fcb7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaybuyersoverview',
            unique_together={('tenant', 'date', 'acquisition_channel', 'country')},
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesdimensioned',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__0ebfd8_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesdimensioned',
            index=models.Index(fields=['package_name'], name='google_play_package_7821c0_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesdimensioned',
            index=models.Index(fields=['dimension_type'], name='google_play_dimensi_23d222_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesdimensioned',
            index=models.Index(fields=['dimension_value'], name='google_play_dimensi_f738c7_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesdimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_05b232_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaycrashesdimensioned',
            unique_together={('tenant', 'package_name', 'date', 'dimension_type', 'dimension_value')},
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesoverview',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__29f0b6_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesoverview',
            index=models.Index(fields=['package_name'], name='google_play_package_72a91b_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesoverview',
            index=models.Index(fields=['device'], name='google_play_device_d59df3_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesoverview',
            index=models.Index(fields=['app_version'], name='google_play_app_ver_d1f5c5_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesoverview',
            index=models.Index(fields=['os_version'], name='google_play_os_vers_699728_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaycrashesoverview',
            index=models.Index(fields=['android_os_version'], name='google_play_android_3dd22d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaycrashesoverview',
            unique_together={('tenant', 'package_name', 'date', 'device', 'app_version', 'os_version', 'android_os_version')},
        ),
        migrations.AddIndex(
            model_name='googleplayearnings',
            index=models.Index(fields=['tenant', 'transaction_date'], name='google_play_tenant__802974_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayearnings',
            index=models.Index(fields=['product_id', 'transaction_date'], name='google_play_product_6209fc_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayearnings',
            index=models.Index(fields=['buyer_country', 'transaction_date'], name='google_play_buyer_c_e83a8f_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayearnings',
            index=models.Index(fields=['transaction_type', 'transaction_date'], name='google_play_transac_00ca14_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayearnings',
            index=models.Index(fields=['sku_id'], name='google_play_sku_id_e647cb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayearnings',
            unique_together={('tenant', 'transaction_date', 'transaction_time', 'product_id', 'buyer_country', 'sku_id', 'amount_buyer_currency')},
        ),
        migrations.AlterUniqueTogether(
            name='googleplayestimatedsales',
            unique_together={('tenant', 'order_number', 'order_charged_date')},
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsdimensioned',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__84ea9a_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsdimensioned',
            index=models.Index(fields=['package_name'], name='google_play_package_580600_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsdimensioned',
            index=models.Index(fields=['dimension_type'], name='google_play_dimensi_c3d98c_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsdimensioned',
            index=models.Index(fields=['dimension_value'], name='google_play_dimensi_3aa77a_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsdimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_d2e865_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayinstallsdimensioned',
            unique_together={('tenant', 'package_name', 'date', 'dimension_type', 'dimension_value')},
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__8b4717_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['package_name'], name='google_play_package_a4066f_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['device'], name='google_play_device_da41a1_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['app_version'], name='google_play_app_ver_883dde_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['os_version'], name='google_play_os_vers_dce165_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['country'], name='google_play_country_e66acb_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['language'], name='google_play_languag_435aa4_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinstallsoverview',
            index=models.Index(fields=['carrier'], name='google_play_carrier_84ddd4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayinstallsoverview',
            unique_together={('tenant', 'package_name', 'date', 'device', 'app_version', 'os_version', 'country', 'language', 'carrier')},
        ),
        migrations.AddIndex(
            model_name='googleplayinvoice',
            index=models.Index(fields=['tenant', 'transaction_date'], name='google_play_tenant__cb5fa5_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinvoice',
            index=models.Index(fields=['package_id', 'transaction_date'], name='google_play_package_1724b1_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinvoice',
            index=models.Index(fields=['sale_country', 'transaction_date'], name='google_play_sale_co_14ed84_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinvoice',
            index=models.Index(fields=['transaction_type', 'transaction_date'], name='google_play_transac_0da732_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinvoice',
            index=models.Index(fields=['sku_type'], name='google_play_sku_typ_169ba1_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayinvoice',
            index=models.Index(fields=['billing_currency'], name='google_play_billing_9f6c1a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayinvoice',
            unique_together={('tenant', 'invoice_id', 'external_transaction_id', 'transaction_timestamp')},
        ),
        migrations.AddIndex(
            model_name='googleplaypromotionalcontent',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__98d029_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaypromotionalcontent',
            index=models.Index(fields=['promotional_content_id'], name='google_play_promoti_c0b4b5_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaypromotionalcontent',
            index=models.Index(fields=['country'], name='google_play_country_7cabe2_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaypromotionalcontent',
            index=models.Index(fields=['outcome'], name='google_play_outcome_46cea3_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaypromotionalcontent',
            index=models.Index(fields=['package_name'], name='google_play_package_fccda5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaypromotionalcontent',
            unique_together={('tenant', 'promotional_content_id', 'date', 'country', 'outcome')},
        ),
        migrations.AddIndex(
            model_name='googleplayratingsdimensioned',
            index=models.Index(fields=['package_name', 'date', 'dimension_type'], name='google_play_package_4b502a_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayratingsdimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_b3b6c9_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayratingsdimensioned',
            index=models.Index(fields=['average_rating'], name='google_play_average_02f363_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayratingsdimensioned',
            unique_together={('tenant', 'package_name', 'date', 'dimension_type', 'dimension_value')},
        ),
        migrations.AddIndex(
            model_name='googleplayratingsoverview',
            index=models.Index(fields=['package_name', 'date'], name='google_play_package_94cc0a_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayratingsoverview',
            index=models.Index(fields=['daily_average_rating'], name='google_play_daily_a_ea6f2c_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayratingsoverview',
            index=models.Index(fields=['total_average_rating'], name='google_play_total_a_570d85_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayratingsoverview',
            unique_together={('tenant', 'package_name', 'date')},
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersdimensioned',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__3cc858_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersdimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_e12296_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersdimensioned',
            index=models.Index(fields=['retention_period'], name='google_play_retenti_e27546_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersdimensioned',
            index=models.Index(fields=['retention_rate'], name='google_play_retenti_e9b0d9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayretainedinstallersdimensioned',
            unique_together={('tenant', 'date', 'dimension_type', 'dimension_value', 'retention_period')},
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersoverview',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__d1665c_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersoverview',
            index=models.Index(fields=['acquisition_channel', 'country'], name='google_play_acquisi_a1e75d_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersoverview',
            index=models.Index(fields=['installers'], name='google_play_install_23ddbc_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayretainedinstallersoverview',
            index=models.Index(fields=['-retention_rate_30_days'], name='google_play_retenti_b6600e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayretainedinstallersoverview',
            unique_together={('tenant', 'date', 'acquisition_channel', 'country')},
        ),
        migrations.AddIndex(
            model_name='googleplayreviews',
            index=models.Index(fields=['tenant', 'package_name'], name='google_play_tenant__f52e7e_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayreviews',
            index=models.Index(fields=['star_rating'], name='google_play_star_ra_51c489_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayreviews',
            index=models.Index(fields=['review_submit_date'], name='google_play_review__7eace9_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplayreviews',
            index=models.Index(fields=['package_name', 'star_rating'], name='google_play_package_3cf48e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplayreviews',
            unique_together={('tenant', 'package_name', 'review_submit_millis_since_epoch')},
        ),
        migrations.AddIndex(
            model_name='googleplaysales',
            index=models.Index(fields=['tenant', 'billing_date'], name='google_play_tenant__a70101_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysales',
            index=models.Index(fields=['product_type'], name='google_play_product_87e5fc_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysales',
            index=models.Index(fields=['financial_status'], name='google_play_financi_b7af54_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysales',
            index=models.Index(fields=['package_id', 'billing_date'], name='google_play_package_e0dc8a_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysales',
            index=models.Index(fields=['product_id', 'billing_date'], name='google_play_product_aa6f12_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaysales',
            unique_together={('tenant', 'order_number', 'billing_timestamp')},
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformancedimensioned',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__dbae5e_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformancedimensioned',
            index=models.Index(fields=['package_name', 'dimension_type'], name='google_play_package_5ca97e_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformancedimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_f41ddb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaystoreperformancedimensioned',
            unique_together={('tenant', 'package_name', 'date', 'dimension_type', 'dimension_value')},
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformanceoverview',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__b15649_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformanceoverview',
            index=models.Index(fields=['package_name', 'country'], name='google_play_package_16386b_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformanceoverview',
            index=models.Index(fields=['traffic_source'], name='google_play_traffic_6fac4d_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformanceoverview',
            index=models.Index(fields=['search_term'], name='google_play_search__0338ef_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaystoreperformanceoverview',
            index=models.Index(fields=['utm_source', 'utm_campaign'], name='google_play_utm_sou_748bfe_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaystoreperformanceoverview',
            unique_together={('tenant', 'package_name', 'date', 'country', 'traffic_source', 'search_term', 'utm_source', 'utm_campaign')},
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptioncancellationreasons',
            index=models.Index(fields=['tenant', 'cancellation_date'], name='google_play_tenant__2b8190_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptioncancellationreasons',
            index=models.Index(fields=['package_name', 'subscription_id'], name='google_play_package_adf12f_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptioncancellationreasons',
            index=models.Index(fields=['country', 'cancellation_reason'], name='google_play_country_762e62_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptioncancellationreasons',
            index=models.Index(fields=['cancellation_reason', 'cancellation_date'], name='google_play_cancell_9bb02a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaysubscriptioncancellationreasons',
            unique_together={('tenant', 'package_name', 'cancellation_date', 'subscription_id', 'sku_id', 'country', 'cancellation_reason')},
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsdimensioned',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__e6e20c_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsdimensioned',
            index=models.Index(fields=['package_name', 'dimension_type'], name='google_play_package_f56b5a_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsdimensioned',
            index=models.Index(fields=['dimension_type', 'dimension_value'], name='google_play_dimensi_ce4086_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaysubscriptionsdimensioned',
            unique_together={('tenant', 'package_name', 'date', 'dimension_type', 'dimension_value')},
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsoverview',
            index=models.Index(fields=['tenant', 'date'], name='google_play_tenant__51f07b_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsoverview',
            index=models.Index(fields=['package_name', 'product_id'], name='google_play_package_c67a07_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsoverview',
            index=models.Index(fields=['country'], name='google_play_country_a5813b_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsoverview',
            index=models.Index(fields=['base_plan_id'], name='google_play_base_pl_66428d_idx'),
        ),
        migrations.AddIndex(
            model_name='googleplaysubscriptionsoverview',
            index=models.Index(fields=['offer_id'], name='google_play_offer_i_9831d9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='googleplaysubscriptionsoverview',
            unique_together={('tenant', 'package_name', 'date', 'product_id', 'country')},
        ),
        migrations.AddIndex(
            model_name='play_balance_krw',
            index=models.Index(fields=['tenant', 'billing_date'], name='google_play_tenant__053352_idx'),
        ),
        migrations.AddIndex(
            model_name='play_balance_krw',
            index=models.Index(fields=['financial_status', 'billing_date'], name='google_play_financi_2ca44f_idx'),
        ),
        migrations.AddIndex(
            model_name='play_balance_krw',
            index=models.Index(fields=['amount'], name='google_play_amount_6dbf29_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='play_balance_krw',
            unique_together={('tenant', 'order_number', 'billing_timestamp')},
        ),
    ]
